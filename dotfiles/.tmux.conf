# cat <<__DATA__ >/dev/null

set -g default-terminal "xterm-256color"
set -g history-limit 10000
set -g display-time 1500
set -g base-index 1
set -g repeat-time 1000
set -g escape-time 50
set -g mode-mouse copy-mode
set -g mouse-select-pane on

# Use correct shell
set -g default-shell $SHELL

# Use different prefix
unbind 'C-b'
set -g prefix 'C-\'
bind '\' send-prefix

# Use vim keys
setw -g mode-keys vi

# vim-like visual selection
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'C-q' rectangle-toggle
bind -t vi-copy 'y' copy-selection
bind -t vi-copy 'V' select-line
bind 'p' paste-buffer
bind 'C-]' paste-buffer

# Pipe pane to log file
bind 'h' pipe-pane -o "cat >>$HOME/#W-tmux#I.log" \; display-message \
    "Toggled logging to $HOME/#W-tmux#I.log"

# Enter copy mode in backward search prompt with C-_
bind -n 'C-_' run "(tmux display-message -p '#{pane_current_command}' \| grep -iqE '(^|\/)vim(diff)?$' && tmux copy-mode) || tmux copy-mode \\\; send-keys be"
bind 'C-_' send 'C-_'

# Change split window bindings
bind '%' choose-buffer
bind '=' split-window
bind '"' split-window -h

# Cycle between panes
bind -r 'Tab' select-pane -t :.+
bind -r 'BTab' select-pane -t :.-

# Don't need to release control to switch windows
bind -r 'C-Tab' next-window
bind -r 'C-S-Tab' previous-window

# Break pane with o ("only" current pane visible)
bind 'o' run "tmux  break-pane \\\; swap-window -t$(tmux display-message -pF '#{window_id}')"
bind 'C-o' run "tmux  break-pane \\\; swap-window -t$(tmux display-message -pF '#{window_id}')"

# Quit entire session with Q
bind 'Q' confirm-before -p "kill-session #W? (y/n)" kill-session

# Make ctrl+arrow keys work
set-window-option -g xterm-keys on

# Other bindings
bind 'M' show-messages
bind 'j' command-prompt -p "join pane from:" "join-pane -s '%%'"
bind 's' command-prompt -p "swap window with:" "swap-window -t '%%'"
bind 'm' command-prompt -p "move window to:" "move-window -t '%%'"
bind 't' source ~/.tmux.conf
bind 'C-t' source ~/.tmux.conf
bind -n 'C-l' refresh-client \; send-keys 'C-l'
bind 'l' last-window
bind 'C-l' last-window
bind '\;' last-window
bind "'" if "tmux last-pane" "" "select-pane -t :.+"
bind "`" if "tmux last-pane" "" "select-pane -t :.+"
bind 'C-c' new-window
bind 'C-\' if "test $(tmux display-message -p '#{window_panes}') -eq 1" \
    'last-window' 'if "tmux last-pane" "" "select-pane -t :.+"'

# Colors for copy mode
setw -g mode-fg black
setw -g mode-bg cyan

# Cygwin configuration
if 'test "$OSTYPE" = "cygwin"' 'run "cut -c3- ~/.tmux.conf | sh -s cygwin_bindings"'

# xclip copy/paste (preferred over Cygwin)
if 'command -v xclip >& /dev/null' 'run "cut -c3- ~/.tmux.conf | sh -s xclip_bindings"'

# Status bar configuration
set -g status-justify "centre"
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=colour0,bg=colour12"
set -g status-right-style "none"
set -g pane-active-border-style "fg=colour4"
set -g status-utf8 "on"
set -g status-style "bg=colour0,none"
set -g message-style "fg=colour0,bg=colour12"
set -g pane-border-style "fg=colour12"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-activity-style "fg=colour4,bg=colour0,none"
setw -g window-status-separator ""
setw -g window-status-style "fg=colour12,bg=colour0,none"
set -g status-left "#[fg=colour8,bg=colour4,bold] #S #[fg=colour4,bg=colour12,nobold,nounderscore,noitalics]#[fg=colour0,bg=colour12] #{?client_prefix,▲,#F} #[fg=colour12,bg=colour0,nobold,nounderscore,noitalics]#[fg=colour12,bg=colour0] #W #[fg=colour0,bg=colour0,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour0,bg=colour0,nobold,nounderscore,noitalics]#[fg=colour12,bg=colour0] %a #[fg=colour12,bg=colour0,nobold,nounderscore,noitalics]#[fg=colour0,bg=colour12] %d%b%y  %R #[fg=colour4,bg=colour12,nobold,nounderscore,noitalics]#[fg=colour8,bg=colour4] #h "
setw -g window-status-format "#[fg=colour0,bg=colour0,nobold,nounderscore,noitalics]#[default] #I#F  #W #[fg=colour0,bg=colour0,nobold,nounderscore,noitalics] "
setw -g window-status-current-format "#[fg=colour0,bg=colour250,nobold,nounderscore,noitalics]#[fg=colour0,bg=colour250] #I#F  #W #[fg=colour250,bg=colour0,nobold,nounderscore,noitalics] "
setw -g window-status-last-bg colour0
setw -g window-status-last-fg colour253

# Toggle status bar
bind 'S' set status

# tmux navigator bindings
bind -n 'M-Left'  run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys M-Left)  || tmux select-pane -L"
bind -n 'M-Down'  run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys M-Down)  || tmux select-pane -D"
bind -n 'M-Up'    run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys M-Up)    || tmux select-pane -U"
bind -n 'M-Right' run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys M-Right) || tmux select-pane -R"

# Local configuration
if 'test -e ~/.tmux-local.conf' 'source ~/.tmux-local.conf'

# __DATA__
#
# function cygwin_bindings {
#     # Copy/paste from Cygwin clipboard
#     tmux bind -t vi-copy 'y' copy-pipe "tee /dev/clipboard"
#     tmux bind 'C-c' run "tmux show-buffer > /dev/clipboard"
#     tmux bind 'C-v' run 'tmux set-buffer "$(cat /dev/clipboard)"; tmux paste-buffer'
#     tmux bind ']'   run 'tmux set-buffer "$(cat /dev/clipboard)"; tmux paste-buffer'
#     tmux bind 'C-]' run 'tmux set-buffer "$(cat /dev/clipboard)"; tmux paste-buffer'
# }
#
# function xclip_bindings {
#     # Copy/paste from xclip
#     tmux bind -t vi-copy 'y' copy-pipe "xclip -i -sel p -f | xclip -i -sel c"
#     tmux bind 'C-c' run -b "tmux save-buffer - | xclip -i -sel p -f | xclip -i -sel c &"
#     tmux bind 'C-v' run 'tmux set-buffer "$(xclip -o)"; tmux paste-buffer'
#     tmux bind ']'   run 'tmux set-buffer "$(xclip -o)"; tmux paste-buffer'
#     tmux bind 'C-]' run 'tmux set-buffer "$(xclip -o)"; tmux paste-buffer'
# }
#
# $1
