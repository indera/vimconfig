# cat <<__DATA__ >/dev/null

set -g default-terminal "xterm-256color"
set -g history-limit 10000
set -g display-time 1500
set -g base-index 1
set -g repeat-time 1000
set -g escape-time 50
set -g mode-mouse copy-mode

# Use correct shell
set -g default-shell $SHELL

# Use different prefix
unbind 'C-b'
set -g prefix 'C-\'
bind C-\ if "test `tmux list-panes -F '#{window_panes}' | head -n 1` -gt 1" \
    'last-pane' 'last-window'
bind '\' send-prefix

# Use vim keys
setw -g mode-keys vi

# vim-like visual selection
bind -t vi-copy 'v' begin-selection
bind -t vi-copy 'C-q' rectangle-toggle
bind -t vi-copy 'y' copy-selection
bind -t vi-copy 'V' select-line
bind 'Space' copy-mode
bind p paste-buffer
bind 'C-]' paste-buffer

# Pipe pane to log file
bind H pipe-pane -o "cat >>$HOME/#W-tmux#I.log" \; display-message \
    "Toggled logging to $HOME/#W-tmux#I.log"

# Enter copy mode in backward search prompt with C-_
bind -n 'C-_' copy-mode \; send-keys 0
bind 'C-_' send ^_

# Change split window bindings
bind '%' choose-buffer
bind '=' split-window
bind '"' split-window -h

# Cycle between panes
bind ^I select-pane -t :.+
bind '`' select-pane -t :.+

# Switch panes with hjkl
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Don't need to release control to switch windows
bind -r 'C-n' next-window
bind -r 'C-p' previous-window
bind -r 'C-Tab' next-window
bind -r 'C-S-Tab' previous-window

# Break pane with o ("only" current pane visible)
bind o break-pane

# Quit entire session with Q
bind Q confirm-before -p "kill-session #W? (y/n)" kill-session

# Make ctrl+arrow keys work
set-window-option -g xterm-keys on

# Other bindings
bind m show-messages
bind J command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind S command-prompt -p "send pane to:"  "join-pane -t '%%'"
bind t source ~/.tmux.conf

# Colors for copy mode
setw -g mode-fg black
setw -g mode-bg cyan

# Copy to xclip
if 'hash xclip 2>/dev/null' 'bind -t vi-copy y copy-pipe "xclip -i -sel p -f \
    | xclip -i -sel c "'

# Cygwin configuration
if 'test "$OSTYPE" = "cygwin"' 'run "cut -c3- ~/.tmux.conf | sh -s cygwin_bindings"'

# Status bar configuration
set -g status-bg 'colour235'
set -g message-command-fg 'colour222'
set -g status-justify 'centre'
set -g status-left-length '100'
set -g status 'on'
set -g pane-active-border-fg 'colour154'
set -g message-bg 'colour238'
set -g status-right-length '100'
set -g status-right-attr 'none'
set -g message-fg 'colour222'
set -g message-command-bg 'colour238'
set -g status-attr 'none'
set -g status-utf8 'on'
set -g pane-border-fg 'colour238'
set -g status-left-attr 'none'
setw -g window-status-fg 'colour121'
setw -g window-status-attr 'none'
setw -g window-status-activity-bg 'colour235'
setw -g window-status-activity-attr 'none'
setw -g window-status-activity-fg 'colour154'
setw -g window-status-separator ''
setw -g window-status-bg 'colour235'
set -g status-left '#[fg=colour232,bg=colour154] #S #[fg=colour154,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #F #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour121,bg=colour235] #W #[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]'
set -g status-right '#[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour121,bg=colour235] %d%b%y #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] %R #[fg=colour154,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour232,bg=colour154] #h #[fg=colour7,bg=colour235]'
setw -g window-status-format '#[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]#[default] #I#F  #W #[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]'
setw -g window-status-current-format '#[fg=colour235,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #I#F  #W #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]'
setw -g window-status-last-bg colour236
setw -g window-status-last-fg colour122

# Toggle status bar
bind s set status

# tmux navigator bindings
bind -n M-Left  run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys M-Left)  || tmux select-pane -L"
bind -n M-Down  run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys M-Down)  || tmux select-pane -D"
bind -n M-Up    run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys M-Up)    || tmux select-pane -U"
bind -n M-Right run "(tmux display-message -p '#{pane_current_command}' | grep -iqE '(^|\/)vim(diff)?$' && tmux send-keys M-Right) || tmux select-pane -R"

# Local configuration
if 'test -e ~/.tmux-local.conf' 'source ~/.tmux-local.conf'

# __DATA__
#
# function cygwin_bindings {
#     # Copy/paste from Cygwin clipboard
#     tmux bind -t vi-copy y copy-pipe "tee /dev/clipboard"
#     tmux bind C-c run-shell "tmux show-buffer > /dev/clipboard"
#     tmux bind C-v run "tmux set-buffer \"\$(cat /dev/clipboard)\"; tmux paste-buffer"
#     tmux bind "]" run "tmux set-buffer \"\$(cat /dev/clipboard)\"; tmux paste-buffer"
#     tmux bind "^]" run "tmux set-buffer \"\$(cat /dev/clipboard)\"; tmux paste-buffer"
# }
#
# $1
