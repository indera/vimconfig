include c.snip

# #include <...>
snippet inc
alias   #inc, #include
    #include <${1:iostream}>
# #include "..."
snippet inc2
alias   #inc2, #include2
    #include "${1}"

snippet incfmt
alias   #incfmt
    #include <boost/format.hpp>
    using boost::format;

snippet     template
abbr        template <T>
    template<typename ${1:T}>

snippet     class
abbr        class {}
    class ${1:#:name}
    {
        ${2}
    public:
        $1(${3});
    };
    $1::$1($3)
    {
        ${0:TARGET}
    }

snippet     class-without-constructor
abbr        class {}
    class ${1:#:name}
    {
        ${2}
    };

snippet     try
abbr        try catch
    try
    {
        ${1:#:TARGET}
    }
    catch (${2:...})
    {
        ${3}
    }

# range based for ( C++11 feature )
snippet     for_CPP11
abbr        for (:) {}
    for (${1:auto&& }${2:var} : ${3:container})
    {
        ${0:TARGET}
    }

delete      namespace
snippet     namespace
abbr        namespace {}
options     head
    namespace ${1:#:name}
    {
        ${0:TARGET}
    } // namespace $1


snippet format
alias   fmt
abbr    format("...") % ...
    format("${1}") % ${2}
