#compdef ctags

# zsh completions for 'ctags'
# automatically generated with http://github.com/RobSis/zsh-completion-generator
local arguments

arguments=(
    '-a[Append the tags to an existing tag file.]'
    '-B[Use backward searching patterns (?...?).]'
    '-e[Output tag file for use with Emacs.]'
    '-f[Write tags to specified file. Value of "-" writes tags to stdout]'
    '-F[Use forward searching patterns (/.../) (default).]'
    '-h[Specify list of file extensions to be treated as include files.]'
    '-I[@file>]'
    '-L[A list of source file names are read from the specified file.]'
    '-n[Equivalent to --excmd=number.]'
    '-N[Equivalent to --excmd=pattern.]'
    '-o[Alternative for -f.]'
    '-R[Equivalent to --recurse.]'
    '-u[Equivalent to --sort=no.]'
    '-V[Equivalent to --verbose.]'
    '-x[Print a tabular cross reference file to standard output.]'
    '--append[Should tags should be appended to existing tag file \[no\]?]'
    '--etags-include[Include reference to file in Emacs-style tag file (requires -e).]'
    '--exclude[Exclude files and directories matching pattern.]'
    '--excmd[Uses the specified type of EX command to locate tags \[mix\].]'
    '--extra[+|-\]flags]'
    '--fields[+|-\]flags]'
    '--file-scope[Should tags scoped only for a single file (e.g. "static" tags]'
    '--filter[Behave as a filter, reading file names from standard input and]'
    '--filter-terminator[Specify string to print to stdout following the tags for each file]'
    '--format[Force output of specified tag file format \[2\].]'
    '--help[Print this option summary.]'
    '--if0[Should C code within #if 0 conditional branches be parsed \[no\]?]'
    '--langdef[Define a new language to be parsed with regular expressions.]'
    '--langmap[(s)]'
    '--language-force[Force all files to be interpreted using specified language.]'
    '--languages[+|-\]list]'
    '--license[Print details of software license.]'
    '--line-directives[Should #line directives be processed \[no\]?]'
    '--links[Indicate whether symbolic links should be followed \[yes\].]'
    '--list-kinds[Output a list of all tag kinds for specified language or all.]'
    '--list-languages[Output list of supported languages.]'
    '--list-maps[Output list of language mappings.]'
    '--options[Specify file from which command line options should be read.]'
    '--recurse[Recurse into directories supplied on command line \[no\].]'
    '--regex-[<LANG>=/line_pattern/name_pattern/\[flags\]]'
    '--sort[Should tags be sorted (optionally ignoring case) \[yes\]?.]'
    '--tag-relative[Should paths be relative to location of tag file \[no; yes when -e\]?]'
    '--totals[Print statistics about source and tag files \[no\].]'
    '--verbose[Enable verbose messages describing actions on each source file.]'
    '--version[Print version identifier to standard output.]'
    '*:filename:_files'
)

_arguments -s $arguments
